<Window x:Class="Oscilloscope.View.PieChartItem.PieChartOptionsForm"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:c="clr-namespace:Oscilloscope.View.PieChartItem"
        xmlns:local="clr-namespace:Oscilloscope.View.MainItem"
        Title="Настройки диаграммы сопротивлений"  SizeToContent="WidthAndHeight" ResizeMode="NoResize" Topmost="True" MinWidth="510" MinHeight="660">
    <Window.Resources>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <local:StringToDoubleConverter x:Key="DoubleConverter"/>
    </Window.Resources>

    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <TabControl>
            <TabItem Header="Конфигурация">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="74*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="90"/>
                        <RowDefinition Height="Auto" MinHeight="26"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Canvas Height="76" HorizontalAlignment="Left" VerticalAlignment="Top" Width="0">
                        <VirtualizingStackPanel Orientation="Horizontal" HorizontalAlignment="Left" Canvas.Top="10">
                            <Label Content="Начальное время" Width="110" HorizontalAlignment="Left" />
                            <TextBox x:Name="StartTimeTb" Width="100"/>
                        </VirtualizingStackPanel>
                        <VirtualizingStackPanel Orientation="Horizontal" HorizontalAlignment="Left" Canvas.Top="41">
                            <Label Content="Конечное время" Width="110"/>
                            <TextBox x:Name="EndTimeTb" Width="100"/>
                        </VirtualizingStackPanel>
                        <Button Content="Между маркерами" HorizontalAlignment="Left" Height="57" Width="122" Click="Button_Click_3" Canvas.Left="215" Canvas.Top="10"/>
                        <GroupBox Canvas.Left="342" Height="77" Width="155" Canvas.Top="-4">
                            <VirtualizingStackPanel Margin="0,5,0,0">
                                <RadioButton x:Name="k0RadioBtn" Content="К0 = Ze/Z1"/>
                                <RadioButton x:Name="rxRadioBtn" Content="Re/R1 и Xe/X1"/>
                            </VirtualizingStackPanel>
                            <GroupBox.Header>
                                <TextBlock TextWrapping="Wrap" Width="124">
                                    Компенсация нулевой последовательности
                                </TextBlock>
                            </GroupBox.Header>
                        </GroupBox>
                    </Canvas>

                    <VirtualizingStackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0,0,0" Grid.Row="1" Grid.Column="0">
                        <DataGrid  x:Name="IOptions" AutoGenerateColumns="False" HorizontalAlignment="Left" VerticalAlignment="Top" PreviewMouseLeftButtonDown="DataGridCell_PreviewMouseLeftButtonDown">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" ClipboardContentBinding="{x:Null}" Header="Канал I" CanUserSort="False" CanUserResize="False" IsReadOnly="True"/>

                                <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="A">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding A, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="B">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding B, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="C">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding C, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>


                            </DataGrid.Columns>
                        </DataGrid>
                        <DataGrid x:Name="UOptions" AutoGenerateColumns="False" HorizontalAlignment="Left" VerticalAlignment="Top" PreviewMouseLeftButtonDown="DataGridCell_PreviewMouseLeftButtonDown">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" ClipboardContentBinding="{x:Null}" Header="Канал U" CanUserSort="False" CanUserResize="False" IsReadOnly="True"/>
                                <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="A">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding A, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="B">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding B, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="C">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding C, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </VirtualizingStackPanel>

                    <DataGrid x:Name="VisiblyOptionsGrid" AutoGenerateColumns="False" HorizontalAlignment="Left" VerticalAlignment="Top" PreviewMouseLeftButtonDown="DataGridCell_PreviewMouseLeftButtonDown" Grid.Column="1" Grid.Row="1" CanUserAddRows="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Channel, UpdateSourceTrigger=PropertyChanged}" 
                                                ClipboardContentBinding="{x:Null}" Header="Канал" CanUserSort="False" 
                                                CanUserResize="False" IsReadOnly="True"/>

                            <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Круговая">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding Visible, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="R">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding R, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="X">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding X, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="Цвет">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Label Width="20" Height="20" Background="{Binding LineColor, UpdateSourceTrigger=PropertyChanged}" MouseDoubleClick="ColorLabelDoubleClick"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                        </DataGrid.Columns>
                    </DataGrid>
                    <GroupBox Header="Коэффициенты компенсации" Margin="0,5,0,0" Grid.Row="2" Grid.Column="0"
                              HorizontalAlignment="Left" Width="272">
                        <VirtualizingStackPanel>

                            <c:ZEditControl x:Name="Z1Editor" Index="1" ChannelsChanged="ChannelsChanged"/>
                            <c:ZEditControl x:Name="Z2Editor" Index="2" ChannelsChanged="ChannelsChanged"/>
                            <c:ZEditControl x:Name="Z3Editor" Index="3" ChannelsChanged="ChannelsChanged"/>
                            <c:ZEditControl x:Name="Z4Editor" Index="4" ChannelsChanged="ChannelsChanged"/>
                            <c:ZEditControl x:Name="Z5Editor" Index="5" ChannelsChanged="ChannelsChanged"/>
                        </VirtualizingStackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="Характеристики">
                <Grid>
                    <TabControl HorizontalAlignment="Left" Height="134" Margin="10,10,0,0" VerticalAlignment="Top" Width="282"  TabStripPlacement="Left" BorderBrush="White">
                        <TabItem Name="PolyTab" Header="Полигональная" BorderBrush="White" Background="White">

                            <Grid x:Name="PolyGrid"  Background="White" Margin="0,0,0,0">
                                <Label Content="R" HorizontalAlignment="Left" Margin="19,0,0,0" VerticalAlignment="Top"/>
                                <Label Content="X" HorizontalAlignment="Left" Margin="19,31,0,0" VerticalAlignment="Top"/>
                                <Label Content="&#x03C6;" HorizontalAlignment="Left" Margin="19,62,0,-1" VerticalAlignment="Top"/>
                                <TextBox x:Name="PolyRTb" HorizontalAlignment="Left" Height="23" Margin="41,2,0,0" TextWrapping="Wrap"  VerticalAlignment="Top"  Width="120" Style="{StaticResource textBoxInError}" >
                                    <TextBox.Text>
                                        <Binding Path="R" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource DoubleConverter}" >
                                            <Binding.ValidationRules>
                                                <local:DoubleValidationRule Min="0" Max="256"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBox x:Name="PolyXTb"  HorizontalAlignment="Left" Height="23" Margin="41,33,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="120" Style="{StaticResource textBoxInError}">
                                    <TextBox.Text>
                                        <Binding Path="X" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource DoubleConverter}">
                                            <Binding.ValidationRules>
                                                <local:DoubleValidationRule Min="0" Max="256"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBox x:Name="PolyFTb"  HorizontalAlignment="Left" Height="23" Margin="41,64,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="120" Style="{StaticResource textBoxInError}">
                                    <TextBox.Text>
                                        <Binding Path="F" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource DoubleConverter}">
                                            <Binding.ValidationRules>
                                                <local:DoubleValidationRule Min="0" Max="89"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <Button Name="PolyAddButton" Margin="41,93,0,0" Content="Добавить"  Height="24" VerticalAlignment="Top" HorizontalAlignment="Left" Width="120" Click="PolyAddButton_Click">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=PolyRTb}"  Value="False"></Condition>
                                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=PolyXTb}"  Value="False"></Condition>
                                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=PolyFTb}"  Value="False"></Condition>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Круговая">
                            <Grid x:Name="RoundGrid" Background="White" Margin="0,0,0,0">
                                <Label Content="R" HorizontalAlignment="Left" Margin="19,0,0,0" VerticalAlignment="Top"/>
                                <Label Content="X" HorizontalAlignment="Left" Margin="19,31,0,0" VerticalAlignment="Top"/>
                                <Label Content="r" HorizontalAlignment="Left" Margin="19,62,0,-1" VerticalAlignment="Top"/>
                                <TextBox x:Name="RoundRTb" HorizontalAlignment="Left" Height="23" Margin="41,2,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="120" Style="{StaticResource textBoxInError}">
                                    <TextBox.Text>
                                        <Binding Path="R" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource DoubleConverter}">
                                            <Binding.ValidationRules>
                                                <local:DoubleValidationRule Min="-256" Max="256"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBox x:Name="RoundXTb" HorizontalAlignment="Left" Height="23" Margin="41,33,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="120" Style="{StaticResource textBoxInError}">
                                    <TextBox.Text>
                                        <Binding Path="X" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource DoubleConverter}">
                                            <Binding.ValidationRules>
                                                <local:DoubleValidationRule Min="-256" Max="256"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBox x:Name="RoundRadiusTb" HorizontalAlignment="Left" Height="23" Margin="41,64,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Style="{StaticResource textBoxInError}">
                                    <TextBox.Text>
                                        <Binding Path="Radius" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource DoubleConverter}">
                                            <Binding.ValidationRules>
                                                <local:DoubleValidationRule Min="0" Max="256"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <Button Name="RoundAddButton" Margin="41,93,0,0" Content="Добавить" Height="24" VerticalAlignment="Top" HorizontalAlignment="Left" Width="120" Click="RoundAddButton_Click" >
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=RoundRTb}"  Value="False"></Condition>
                                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=RoundXTb}"  Value="False"></Condition>
                                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=RoundRadiusTb}"  Value="False"></Condition>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Нагрузка">
                            <Grid x:Name="ChargeGrid" Background="White" Margin="0,0,0,0">
                                <Label Content="R1" HorizontalAlignment="Left" Margin="19,0,0,0" VerticalAlignment="Top"/>
                                <Label Content="R2" HorizontalAlignment="Left" Margin="19,31,0,0" VerticalAlignment="Top"/>
                                <Label Content="&#x03C6;" HorizontalAlignment="Left" Margin="19,62,0,-1" VerticalAlignment="Top"/>
                                <TextBox x:Name="ChargeR1Tb" HorizontalAlignment="Left" Height="23" Margin="41,2,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="120" Style="{StaticResource textBoxInError}">
                                    <TextBox.Text>
                                        <Binding Path="R1" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource DoubleConverter}">
                                            <Binding.ValidationRules>
                                                <local:DoubleValidationRule Min="0" Max="256"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBox x:Name="ChargeR2Tb" HorizontalAlignment="Left" Height="23" Margin="41,33,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="120" Style="{StaticResource textBoxInError}">
                                    <TextBox.Text>
                                        <Binding Path="R2" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource DoubleConverter}">
                                            <Binding.ValidationRules>
                                                <local:DoubleValidationRule Min="0" Max="256"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBox x:Name="ChargeFTb" HorizontalAlignment="Left" Height="23" Margin="41,64,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="120" Style="{StaticResource textBoxInError}">
                                    <TextBox.Text>
                                        <Binding Path="F" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource DoubleConverter}">
                                            <Binding.ValidationRules>
                                                <local:DoubleValidationRule Min="0" Max="256"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <Button Name="ChargeAddButton" Margin="41,93,0,0" Content="Добавить" Height="24" VerticalAlignment="Top" HorizontalAlignment="Left" Width="120" Click="ChargeAddButton_Click" >
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=ChargeR1Tb}"  Value="False"></Condition>
                                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=ChargeR2Tb}"  Value="False"></Condition>
                                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=ChargeFTb}"  Value="False"></Condition>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Направление">
                            <Grid x:Name="DirectionGrid" Background="White" Margin="0,0,0,0">
                                <Label Content="&#x03C6;1" HorizontalAlignment="Left" Margin="19,0,0,0" VerticalAlignment="Top"/>
                                <Label Content="&#x03C6;2" HorizontalAlignment="Left" Margin="19,31,0,0" VerticalAlignment="Top"/>

                                <TextBox x:Name="DirectionF1Tb" HorizontalAlignment="Left" Height="23" Margin="41,2,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="120" Style="{StaticResource textBoxInError}">
                                    <TextBox.Text>
                                        <Binding Path="F1" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource DoubleConverter}">
                                            <Binding.ValidationRules>
                                                <local:DoubleValidationRule Min="0" Max="89"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBox x:Name="DirectionF2Tb" HorizontalAlignment="Left" Height="23" Margin="41,33,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="120" Style="{StaticResource textBoxInError}">
                                    <TextBox.Text>
                                        <Binding Path="F2" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource DoubleConverter}">
                                            <Binding.ValidationRules>
                                                <local:DoubleValidationRule Min="0" Max="89"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <Button Name="DirectionAddButton" Margin="41,93,0,0" Content="Добавить" Height="24" VerticalAlignment="Top" HorizontalAlignment="Left" Width="120" Click="DirectionAddButton_Click">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=DirectionF1Tb}"  Value="False"></Condition>
                                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=DirectionF2Tb}"  Value="False"></Condition>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </TabItem>
                    </TabControl>
                    <ListBox x:Name="listBox" HorizontalAlignment="Left" Height="128" Margin="10,149,0,0" VerticalAlignment="Top" Width="282">
                        <ListBox.ItemTemplate>
                            <DataTemplate>

                                <Grid Margin="3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <CheckBox IsChecked="{Binding Enabled}" Margin="5,0,5,0"></CheckBox>
                                    <TextBlock Grid.Column="1" Text="{Binding}"/>
                                </Grid>

                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <Button Content="Удалить" Name="DeleteButton" HorizontalAlignment="Left" Margin="297,149,0,0" VerticalAlignment="Top" Width="75" Click="DeleteButton_Click"/>

                </Grid>
            </TabItem>
        </TabControl>

        <Button Content="Принять" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="12,0,0,5" Width="60" Click="Button_Click_1" Grid.Row="1"/>
        <Button Content="Отмена" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="76,0,0,5" Width="60" Click="Button_Click_2" Grid.Row="1"/>
        <Button x:Name="SaveButton" Content="Сохранить в файл" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="142,0,0,5"  Width="140" Click="SaveButton_Click" Grid.Row="1"/>
        <Button x:Name="LoadButton" Content="Загрузить из файла" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="286,0,0,5"  Width="140" Click="LoadButton_Click" Grid.Row="1"/>
    </Grid>
</Window>
