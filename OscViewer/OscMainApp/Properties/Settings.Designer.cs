//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Oscilloscope.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.6.0.0")]
    public sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool Vector {
            get {
                return ((bool)(this["Vector"]));
            }
            set {
                this["Vector"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool Pie {
            get {
                return ((bool)(this["Pie"]));
            }
            set {
                this["Pie"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool Frequency {
            get {
                return ((bool)(this["Frequency"]));
            }
            set {
                this["Frequency"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string OpenDirectory {
            get {
                return ((string)(this["OpenDirectory"]));
            }
            set {
                this["OpenDirectory"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string SaveDirectory {
            get {
                return ((string)(this["SaveDirectory"]));
            }
            set {
                this["SaveDirectory"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("200")]
        public global::System.Windows.GridLength FrequencyHeight {
            get {
                return ((global::System.Windows.GridLength)(this["FrequencyHeight"]));
            }
            set {
                this["FrequencyHeight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("200")]
        public global::System.Windows.GridLength RightWidth {
            get {
                return ((global::System.Windows.GridLength)(this["RightWidth"]));
            }
            set {
                this["RightWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("200")]
        public global::System.Windows.GridLength VectorHeight {
            get {
                return ((global::System.Windows.GridLength)(this["VectorHeight"]));
            }
            set {
                this["VectorHeight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int DiscretVisibleOption {
            get {
                return ((int)(this["DiscretVisibleOption"]));
            }
            set {
                this["DiscretVisibleOption"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AnalogMin {
            get {
                return ((bool)(this["AnalogMin"]));
            }
            set {
                this["AnalogMin"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AnalogMax {
            get {
                return ((bool)(this["AnalogMax"]));
            }
            set {
                this["AnalogMax"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AnalogRms {
            get {
                return ((bool)(this["AnalogRms"]));
            }
            set {
                this["AnalogRms"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AnalogFirstHarmonic {
            get {
                return ((bool)(this["AnalogFirstHarmonic"]));
            }
            set {
                this["AnalogFirstHarmonic"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("null")]
        public global::Oscilloscope.View.PieChartItem.PieChartVisiblyOptions PieChartOptions {
            get {
                return ((global::Oscilloscope.View.PieChartItem.PieChartVisiblyOptions)(this["PieChartOptions"]));
            }
            set {
                this["PieChartOptions"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<WINDOWPLACEMENT xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <length>0</length>
  <flags>0</flags>
  <showCmd>0</showCmd>
  <minPosition>
    <X>0</X>
    <Y>0</Y>
  </minPosition>
  <maxPosition>
    <X>0</X>
    <Y>0</Y>
  </maxPosition>
  <normalPosition>
    <Left>0</Left>
    <Top>0</Top>
    <Right>0</Right>
    <Bottom>0</Bottom>
  </normalPosition>
</WINDOWPLACEMENT>")]
        public global::Oscilloscope.View.MainItem.WINDOWPLACEMENT WindowPlacement {
            get {
                return ((global::Oscilloscope.View.MainItem.WINDOWPLACEMENT)(this["WindowPlacement"]));
            }
            set {
                this["WindowPlacement"] = value;
            }
        }
    }
}
