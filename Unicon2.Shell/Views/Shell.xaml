<controls:MetroWindow
    x:Class="Unicon2.Shell.Views.Shell"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:Unicon2.Shell.Behaviors"
    xmlns:behaviours="http://metro.mahapps.com/winfx/xaml/shared"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    xmlns:dockingManagerWindows="clr-namespace:Unicon2.Presentation.Infrastructure.ViewModels.DockingManagerWindows;assembly=Unicon2.Presentation.Infrastructure"
    xmlns:fluent="urn:fluent-ribbon"
    xmlns:fragmentInterfaces="clr-namespace:Unicon2.Presentation.Infrastructure.ViewModels.FragmentInterfaces;assembly=Unicon2.Presentation.Infrastructure"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:infrastructure="clr-namespace:Unicon2.Infrastructure;assembly=Unicon2.Infrastructure"
    xmlns:layoutHelpers="clr-namespace:Unicon2.SharedResources.LayoutHelpers;assembly=Unicon2.SharedResources"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mvvm="http://prismlibrary.com/"
    xmlns:services="clr-namespace:Unicon2.Shell.Services"
    xmlns:views="clr-namespace:Unicon2.Shell.Views"
    xmlns:views1="clr-namespace:Unicon2.Presentation.Views;assembly=Unicon2.Presentation"
    xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
    xmlns:viewModels="clr-namespace:Unicon2.Shell.ViewModels"
    x:Name="MainWindow"
    Title="{Binding ShellTitle}"
    Width="900"
    Height="600"
    dialogs:DialogParticipation.Register="{Binding}"
    lex:LocalizeDictionary.DesignCulture="ru-RU"
    lex:ResxLocalizationProvider.DefaultAssembly="Unicon2.Localization"
    lex:ResxLocalizationProvider.DefaultDictionary="Resources"
    mvvm:ViewModelLocator.AutoWireViewModel="True"
    GlowBrush="Black"
    ResizeMode="CanResizeWithGrip"
    SaveWindowPosition="True"
    ShowDialogsOverTitleBar="True"
    ShowSystemMenuOnRightClick="False"
    TitleCharacterCasing="Normal"
    WindowButtonCommandsOverlayBehavior="Always"
    WindowState="Maximized"
    mc:Ignorable="d">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <mvvm:InvokeCommandAction Command="{Binding OnClosingCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Loaded">
            <mvvm:InvokeCommandAction Command="{Binding OnLoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <controls:MetroWindow.Resources>
        <layoutHelpers:ActiveDocumentConverter x:Key="ActiveDocumentConverter" />
        <xcad:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

        <Style TargetType="{x:Type fluent:RibbonTabItem}">
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderBrush" Value="Transparent" />
        </Style>
    </controls:MetroWindow.Resources>

    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl mvvm:RegionManager.RegionName="{x:Static infrastructure:ApplicationGlobalNames+ViewNames.DEVICE_EDITING_FLYOUT_REGION_NAME}">
            <views:ShellSettingsFlyOut
                x:Name="menuFlyOut"
                IsOpen="{Binding IsMenuFlyOutOpen, Mode=TwoWay}"
                IsPinned="False"
                Position="Left"
                Theme="Accent" />
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>

    <controls:MetroWindow.LeftWindowCommands>
        <controls:WindowCommands Initialized="Shell_Initialized">
            <ToggleButton Cursor="Hand" IsChecked="{Binding IsOpen, ElementName=menuFlyOut}">
                <Rectangle
                    Width="15"
                    Height="15"
                    Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_cog}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </ToggleButton>
            <Button
                Name="toggleButtonFile"
                Content="{lex:Loc Key=File}"
                FontSize="14"
                Foreground="{DynamicResource IdealForegroundColorBrush}">
                <i:Interaction.Behaviors>
                    <behaviors:ButtonContextMenuOpenBehavior />
                </i:Interaction.Behaviors>
                <Button.ContextMenu>
                    <ContextMenu Name="fileContextMenu">
                        <MenuItem Command="{Binding OpenProjectCommand}" Header="{lex:Loc Key=OpenProject}" />
                        <MenuItem Command="{Binding NewProjectCommand}" Header="{lex:Loc Key=NewProject}" />
                        <MenuItem Header="{lex:Loc Recent}" ItemsSource="{Binding RecentProjects}">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="{x:Type MenuItem}">
                                    <Setter Property="Command" Value="{Binding DataContext.OpenRecentProjectCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}, AncestorLevel=1}}" />
                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                    <Setter Property="Padding" Value="5" />

                                </Style>
                            </MenuItem.ItemContainerStyle>
                            <MenuItem.ItemTemplate>
                                <DataTemplate DataType="viewModels:RecentProjectViewModel">
                                    <TextBlock
                                        Text="{Binding ProjectTitle}" />
                                </DataTemplate>
                            </MenuItem.ItemTemplate>
                        </MenuItem>
                        <MenuItem Command="{Binding SaveProjectCommand}" Header="{lex:Loc Key=Save}" />
                        <MenuItem Command="{Binding SaveAsProjectCommand}" Header="{lex:Loc Key=SaveAs}" />
                        <MenuItem Command="{Binding ExitCommand}" Header="{lex:Loc Key=Exit}" />
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>

            <Button
                Name="toggleButtonDevice"
                Content="{lex:Loc Key=Device}"
                FontSize="14"
                Foreground="{DynamicResource IdealForegroundColorBrush}">
                <i:Interaction.Behaviors>
                    <behaviors:ButtonContextMenuOpenBehavior />
                </i:Interaction.Behaviors>
                <Button.ContextMenu>
                    <ContextMenu Name="deviceContextMenu">
                        <MenuItem
                            Command="{Binding NavigateToDeviceAddingCommand}"
                            CommandParameter="{x:Static infrastructure:ApplicationGlobalNames.ADDING_MODE}"
                            Header="{lex:Loc Key=Add}" />
                        <MenuItem Command="{Binding NavigateToDeviceEditorCommand}" Header="{lex:Loc OpenDeviceEditor}" />
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>




            <Button
                Name="oscOpenButton"
                Command="{Binding OpenOscillogramCommand}"
                Content="{lex:Loc OpenOscillogram}"
                FontSize="14"
                Foreground="{DynamicResource IdealForegroundColorBrush}" />
            <Button
                Name="dynamicContentButton"
                Content="{Binding ActiveFragmentViewModel.FragmentTitle}"
                FontSize="14"
                Foreground="{DynamicResource IdealForegroundColorBrush}"
                Visibility="{Binding ActiveFragmentViewModel, TargetNullValue=Collapsed}">
                <i:Interaction.Behaviors>
                    <behaviors:ButtonContextMenuOpenBehavior />
                    <behaviors:DynamicMenuTabItemBehavior TabItems="{Binding ActiveFragmentViewModel.FragmentViewModel.FragmentOptionsViewModel}" />
                </i:Interaction.Behaviors>
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.LeftWindowCommands>

    <i:Interaction.Behaviors>
        <behaviours:BorderlessWindowBehavior />
    </i:Interaction.Behaviors>

    <Grid ZIndex="2">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <views1:ToolBarView
            Grid.Row="0"
            Grid.Column="0"
            DataContext="{Binding ToolBarViewModel}" />

        <xcad:DockingManager
            x:Name="DockingManager"
            Grid.Row="1"
            Grid.Column="0"
            VerticalAlignment="Stretch"
            ActiveContent="{Binding ActiveFragmentViewModel, Converter={StaticResource ActiveDocumentConverter}, Mode=TwoWay}"
            AllowMixedOrientation="True"
            AnchorableHeaderTemplate="{DynamicResource DockingWindowTitleDataTemplate}"
            AnchorableTitleTemplate="{DynamicResource DockingWindowTitleDataTemplate}"
            AnchorablesSource="{Binding AnchorableWindows}"
            DocumentHeaderTemplate="{DynamicResource DockingWindowTitleDataTemplate}"
            DocumentTitleTemplate="{DynamicResource DockingWindowTitleDataTemplate}"
            DocumentsSource="{Binding FragmentsOpenedCollection}">
            <xcad:DockingManager.Resources>
                <DataTemplate x:Key="DockingWindowTitleDataTemplate" DataType="xcad:LayoutContent">
                    <Grid>
                        <lex:LocProxy Name="titleProxy" Source="{Binding Path=Content.WindowNameKey}" />
                        <TextBlock
                            Margin="0"
                            VerticalAlignment="Center"
                            Text="{Binding ElementName=titleProxy, Path=Result, Converter={StaticResource IgnoringFailedLocalizationConverter}}" />
                    </Grid>
                </DataTemplate>

                <!--<SolidColorBrush x:Key="AvalonDock_ThemeMetro_BaseColor1" Color="White" />
                <SolidColorBrush x:Key="AvalonDock_ThemeMetro_BaseColor2" Color="Black" />
                <SolidColorBrush x:Key="AvalonDock_ThemeMetro_BaseColor3" Color="{DynamicResource AccentColor2}" />
                <SolidColorBrush x:Key="AvalonDock_ThemeMetro_BaseColor4" Color="{DynamicResource AccentColor}" />
                <SolidColorBrush x:Key="AvalonDock_ThemeMetro_BaseColor5" Color="#333333" />
                <SolidColorBrush x:Key="AvalonDock_ThemeMetro_BaseColor6" Color="#8C8E94" />
                <SolidColorBrush x:Key="AvalonDock_ThemeMetro_BaseColor7" Color="#EEEEEE" />-->

            </xcad:DockingManager.Resources>

            <xcad:DockingManager.Theme>
                <xcad:MetroTheme />
            </xcad:DockingManager.Theme>

            <xcad:DockingManager.LayoutUpdateStrategy>
                <services:LayoutInitializer />
            </xcad:DockingManager.LayoutUpdateStrategy>

            <xcad:DockingManager.LayoutItemTemplateSelector>
                <layoutHelpers:DockingManagerTemplateSelector>
                    <layoutHelpers:DockingManagerTemplateSelector.FragmentPaneTemplate>
                        <DataTemplate DataType="fragmentInterfaces:IFragmentPaneViewModel">
                            <ScrollViewer
                                CanContentScroll="True"
                                HorizontalScrollBarVisibility="Disabled"
                                VerticalScrollBarVisibility="Disabled">
                                <ContentControl Content="{Binding FragmentViewModel}">
                                    <ContentControl.ContentTemplateSelector>
                                        <layoutHelpers:FragmentsLayoutTemplateSelector />
                                    </ContentControl.ContentTemplateSelector>
                                </ContentControl>
                            </ScrollViewer>
                        </DataTemplate>
                    </layoutHelpers:DockingManagerTemplateSelector.FragmentPaneTemplate>
                </layoutHelpers:DockingManagerTemplateSelector>
            </xcad:DockingManager.LayoutItemTemplateSelector>

            <xcad:DockingManager.LayoutItemContainerStyleSelector>
                <layoutHelpers:PanesStyleSelector>
                    <layoutHelpers:PanesStyleSelector.BottomWindowStyle>
                        <Style TargetType="{x:Type xcad:LayoutAnchorableItem}">
                            <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}" />
                            <Setter Property="CanClose" Value="False" />
                            <Setter Property="CanHide" Value="False" />
                        </Style>
                    </layoutHelpers:PanesStyleSelector.BottomWindowStyle>
                    <layoutHelpers:PanesStyleSelector.LeftWindowStyle>
                        <Style TargetType="{x:Type xcad:LayoutAnchorableItem}">
                            <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}" />
                            <Setter Property="CanClose" Value="False" />
                            <Setter Property="CanHide" Value="False" />
                        </Style>
                    </layoutHelpers:PanesStyleSelector.LeftWindowStyle>
                    <layoutHelpers:PanesStyleSelector.ProjectPaneStyle>
                        <Style TargetType="{x:Type xcad:LayoutAnchorableItem}" />
                    </layoutHelpers:PanesStyleSelector.ProjectPaneStyle>
                    <layoutHelpers:PanesStyleSelector.FragmentsPaneStyle>
                        <Style TargetType="{x:Type xcad:LayoutItem}">
                            <Setter Property="Title">
                                <Setter.Value>
                                    <Binding Path="Model.FragmentTitle" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="CloseCommand" Value="{Binding Model.CloseFragmentCommand}" />
                        </Style>
                    </layoutHelpers:PanesStyleSelector.FragmentsPaneStyle>
                </layoutHelpers:PanesStyleSelector>
            </xcad:DockingManager.LayoutItemContainerStyleSelector>

            <xcad:LayoutRoot>
                <xcad:LayoutPanel Orientation="Vertical">
                    <xcad:LayoutPanel DockHeight="2*" Orientation="Horizontal">
                        <xcad:LayoutAnchorablePane Name="LeftAnchorablePane" DockWidth="250" />
                        <xcad:LayoutDocumentPane DockWidth="*" />
                    </xcad:LayoutPanel>
                    <xcad:LayoutAnchorablePane
                        Name="BottomAnchorablePane"
                        DockHeight="200"
                        DockWidth="*" />
                </xcad:LayoutPanel>
            </xcad:LayoutRoot>

        </xcad:DockingManager>

        <Border
            Grid.Row="2"
            Height="20"
            Padding="2"
            Background="{DynamicResource AccentColorBrush2}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="4*" />

                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="{Binding LogServiceViewModel.HeaderString}" />
                <TextBlock
                    Grid.Column="1"
                    Text="{Binding LogServiceViewModel.LastMessageString}"
                    TextTrimming="WordEllipsis" />

            </Grid>

        </Border>

    </Grid>
</controls:MetroWindow>