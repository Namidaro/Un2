<controls:Flyout
    x:Class="Unicon2.DeviceEditorUtilityModule.Views.DeviceEditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    xmlns:fragmentInterfaces="clr-namespace:Unicon2.Presentation.Infrastructure.ViewModels.FragmentInterfaces;assembly=Unicon2.Presentation.Infrastructure"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:templateSelectors="clr-namespace:Unicon2.DeviceEditorUtilityModule.TemplateSelectors"
    xmlns:viewModels="clr-namespace:Unicon2.DeviceEditorUtilityModule.ViewModels"
    Name="DeviceEditorFlyout"
    Margin="0"
    xmlns:converter="clr-namespace:Unicon2.SharedResources.Converter;assembly=Unicon2.SharedResources"
    xmlns:validation="clr-namespace:Unicon2.Presentation.Infrastructure.ViewModels.Validation;assembly=Unicon2.Presentation.Infrastructure"
    HorizontalContentAlignment="Stretch"
    dialogs:DialogParticipation.Register="{Binding}"
    lex:ResxLocalizationProvider.DefaultAssembly="Unicon2.Localization"
    lex:ResxLocalizationProvider.DefaultDictionary="Resources"
    Header="{lex:Loc DeviceEditor}"
    IsModal="True"
    d:DataContext="{d:DesignInstance viewModels:DeviceEditorViewModel}"
    IsOpen="{Binding IsOpen, Mode=TwoWay}"
    IsPinned="True"
    Position="Left"
    Theme="Light"
    mc:Ignorable="d">

    <controls:Flyout.Resources>
        <templateSelectors:FragmentsEditorTemplateSelector x:Key="FragmentsEditorTemplateSelector" />
            <converter:BoolToIconConverter x:Key="BoolToIconConverter" />
    </controls:Flyout.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <TextBlock
                MinWidth="100"
                Margin="10"
                Text="{lex:Loc Device}" />
            <TextBox
                IsTabStop="False"
                MinWidth="250"
                Margin="5"
                FontWeight="SemiBold"
                Text="{Binding ResultingDeviceViewModel.DeviceName, Mode=TwoWay}" />
      
                    <VirtualizingStackPanel Orientation="Horizontal">
                        <Image
                            Width="18"
                            Height="18"
                            Source="{Binding DeviceEditorValidationViewModel.IsSuccess, Converter={StaticResource BoolToIconConverter}}"/>
                        <TextBlock
                            Margin="1"
                            VerticalAlignment="Center"
                            FontSize="11"
                            Text="{lex:Loc ValidationErrors}" />
                       
                        <Button Margin="10" Command="{Binding DeviceEditorValidationViewModel.OpenPopup}" Content="{Binding DeviceEditorValidationViewModel.ErrorViewModels.Count}" Cursor="Hand">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <TextBlock TextDecorations="Underline">
                                        <ContentPresenter />
                                    </TextBlock>
                                </ControlTemplate>
                            </Button.Template>
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Foreground" Value="Blue" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Foreground" Value="Red" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Popup MinWidth="400" Placement="Mouse" StaysOpen="False" IsOpen="{Binding DeviceEditorValidationViewModel.IsValidationPopupOpen}">
                            <Border Background="White" BorderBrush="{DynamicResource MahApps.Brushes.Accent3}" BorderThickness="1">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock
                                            Margin="5"
                                            VerticalAlignment="Center"
                                            FontSize="11"
                                            Text="{lex:Loc ValidationErrors}" />
                                        <Button Height="30" Width="30" Margin="5" Command="{Binding DeviceEditorValidationViewModel.RefreshErrors}" Style="{DynamicResource UniconButtonStyle}">
                                            <Rectangle
                                                ToolTipService.ShowDuration="15000"
                                                Width="15"
                                                Height="15"
                                                Fill="Gray">
                                                <Rectangle.ToolTip>
                                                    <ToolTip>
                                                        <TextBlock Text="{lex:Loc Refresh}" TextWrapping="Wrap" MaxWidth="200"></TextBlock>
                                                    </ToolTip>
                                                </Rectangle.ToolTip>
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_refresh}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Button>
                                    </StackPanel>
                                    <ItemsControl HorizontalAlignment="Stretch" Grid.Row="1" ItemsSource="{Binding DeviceEditorValidationViewModel.ErrorViewModels}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="validation:EditorValidationErrorViewModel">
                                                <Border Margin="3" Background="White" BorderBrush="{DynamicResource MahApps.Brushes.Accent2}" BorderThickness="1">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition></ColumnDefinition>
                                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Margin="5" Text="{Binding ErrorMessage}"></TextBlock>
                                                        <Button Grid.Column="1" Margin="5" Content="{lex:Loc Fix}" Command="{Binding OpenCommand}"></Button>
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Grid>
                            
                            </Border>
                        </Popup>
                        
                    </VirtualizingStackPanel>
             
            <Button
                IsTabStop="False"
                Margin="3"
                Command="{Binding LoadExistingDevice}"
                Content="{lex:Loc LoadExisting}"
                Style="{DynamicResource UniconButtonStyle}" />
            <Button
                IsTabStop="False"
                Margin="5"
                Command="{Binding CreateDeviceCommand}"
                Content="{lex:Loc SaveInDefaultDirectory}"
                Style="{DynamicResource UniconButtonStyle}"
                ToolTip="{lex:Loc SaveInDefaultDirectoryDescription}" />
            <Button
                IsTabStop="False"
                Margin="5"
                Command="{Binding SaveInFileCommand}"
                Content="{lex:Loc SaveInFile}"
                Style="{DynamicResource UniconButtonStyle}" />
        </StackPanel>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Orientation="Horizontal">
                <TextBlock
                    MinWidth="100"
                    Margin="10"
                    Text="{lex:Loc Block}" />
                <ComboBox
                    IsTabStop="False"
                    Name="FragmentsComboBox"
                    Grid.Column="1"
                    MinWidth="100"
                    Margin="5"
                    HorizontalContentAlignment="Stretch"
                    ItemsSource="{Binding ResultingDeviceViewModel.FragmentEditorViewModels}"
                    SelectedItem="{Binding ResultingDeviceViewModel.SelectedFragmentEditorViewModel}">

                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock
                                    HorizontalAlignment="Stretch"
                                    Background="Transparent"
                                    Text="{Binding ElementName=FragmentNameProxy, Path=Result}">
                                    <TextBlock.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem
                                                Command="{Binding DataContext.DeleteFragmentCommand, Source={x:Reference FragmentsComboBox}}"
                                                CommandParameter="{Binding}"
                                                Header="{lex:Loc Delete}" />
                                        </ContextMenu>
                                    </TextBlock.ContextMenu>
                                </TextBlock>
                                <lex:LocProxy Name="FragmentNameProxy" Source="{Binding NameForUiKey}" />
                            </Grid>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <Button
                    VerticalAlignment="Center"
                    Command="{Binding OpenAddFragmentWindowCommand}"
                    Content="{lex:Loc AddBlock}"
                    Style="{DynamicResource UniconButtonStyle}" />
            </StackPanel>
            <UniformGrid Grid.Column="1" Columns="2">
                <Button
                    Margin="3"
                    Command="{Binding OpenSharedResourcesCommand}"
                    Content="{lex:Loc SharedResources}"
                    Style="{DynamicResource UniconButtonStyle}" />
                <Button
                    Margin="3"
                    Command="{Binding ResultingDeviceViewModel.NavigateToConnectionTestingCommand}"
                    Content="{lex:Loc ConnectionTesting}"
                    Style="{DynamicResource UniconButtonStyle}" />
            </UniformGrid>

        </Grid>
        <Border
            Grid.Row="2"
            BorderBrush="{DynamicResource MahApps.Brushes.Accent4}"
            BorderThickness="1">
            <ContentPresenter Content="{Binding ResultingDeviceViewModel.SelectedFragmentEditorViewModel}" ContentTemplateSelector="{StaticResource FragmentsEditorTemplateSelector}" />

        </Border>
    </Grid>
</controls:Flyout>