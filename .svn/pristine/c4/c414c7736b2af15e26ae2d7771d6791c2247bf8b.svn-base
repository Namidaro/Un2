<UserControl x:Class="Unicon2.Fragments.Configuration.Matrix.View.MatrixTemplateEditorControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:customControls="clr-namespace:Unicon2.Fragments.Configuration.Editor.CustomControls;assembly=Unicon2.Fragments.Configuration.Editor"
             xmlns:editorViewModel="clr-namespace:Unicon2.Fragments.Configuration.Matrix.Interfaces.EditorViewModel"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"></BooleanToVisibilityConverter>
        <Style x:Key="ErrorStyle" TargetType="FrameworkElement">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Border
                                VerticalAlignment="Top"
                                BorderBrush="#FFdc000c"
                                BorderThickness="1">
                                <Grid>
                                    <AdornedElementPlaceholder x:Name="adorner" Margin="-1" />
                                </Grid>
                            </Border>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip">
                        <Setter.Value>
                            <ToolTip  Background="#B0dc000c"  Content="{Binding PlacementTarget.(Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <ItemsControl MaxHeight="470" Style="{StaticResource ErrorStyle}" Name="BitsToAssignItemsControl" ItemsSource="{Binding AssignedBitEditorViewModels}">
            <ItemsControl.ItemsPanel>
               <ItemsPanelTemplate>
                    <customControls:WrapPanelWithRowsOrColumnsCount
                       Orientation="Vertical"
                       RowsOrColumnsCount="16" MaxHeight="470">
                    </customControls:WrapPanelWithRowsOrColumnsCount>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="editorViewModel:IAssignedBitEditorViewModel">
                    <StackPanel Orientation="Horizontal" Margin="1">
                        <TextBlock Width="25" Margin="5" Text="{Binding NumberOfBit }"></TextBlock>
                        <ComboBox 
                            Width="150" 
                            SelectedItem="{Binding SelectedBitOptionEditorViewModel}"
                            DisplayMemberPath="FullSugnature"
                            ItemsSource="{Binding BitOptionEditorViewModels}">
                            <ComboBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ComboBoxItem}">
                                    <Setter Property="IsEnabled" Value="{Binding IsEnabled}"/>
                                </Style>
                            </ComboBox.ItemContainerStyle>
                        </ComboBox>
                        <Button Margin="2" Visibility="{Binding IsBitAssigned,Converter={StaticResource booleanToVisibilityConverter}}" Command="{Binding ResetCommand}" Width="25" Height="25" Style="{DynamicResource UniconButtonStyle}">
                            <Rectangle
                                Width="10"
                                Height="10"
                                Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_close}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                    </StackPanel>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</UserControl>
