<mah:MetroWindow
    x:Class="Unicon2.Fragments.Measuring.Editor.View.PresentationSettings.PresentationSettingsWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:contentTemplateSelectors="clr-namespace:Unicon2.Fragments.Measuring.Editor.ContentTemplateSelectors"
    xmlns:converters="clr-namespace:Unicon2.Fragments.Measuring.Editor.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:local="clr-namespace:Unicon2.Fragments.Measuring.Editor.View.PresentationSettings"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:presentationSettings="clr-namespace:Unicon2.Fragments.Measuring.Editor.ViewModel.PresentationSettings"
    xmlns:viewModel="clr-namespace:Unicon2.Fragments.Measuring.Editor.ViewModel"
    d:DataContext="{d:DesignInstance viewModel:PresentationSettingsViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    SaveWindowPosition="True"
    mc:Ignorable="d">
    <mah:MetroWindow.Resources>
        <converters:PresentationElementNameConverter x:Key="PresentationElementNameConverter" />
        <converters:FilterStringToGroupAddRemoveVisibilityConverter x:Key="StringToGroupAddRemoveVisibilityConverter" />
    </mah:MetroWindow.Resources>
    <Grid Name="mainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" MinWidth="200" />
        </Grid.ColumnDefinitions>
        <ScrollViewer
            BorderBrush="Black"
            BorderThickness="1"
            HorizontalScrollBarVisibility="Auto"
            VerticalScrollBarVisibility="Auto">
            <Grid Grid.Column="0">
                <ItemsControl ItemsSource="{Binding PresentationElementViewModels}">
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="FrameworkElement">
                            <Setter Property="Canvas.Left" Value="{Binding Path=PositioningInfoViewModel.OffsetLeft}" />
                            <Setter Property="Canvas.Top" Value="{Binding Path=PositioningInfoViewModel.OffsetTop}" />
                            <Setter Property="Canvas.Width" Value="{Binding Path=PositioningInfoViewModel.SizeWidth}" />
                            <Setter Property="Canvas.Height" Value="{Binding Path=PositioningInfoViewModel.SizeHeight}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <local:AdornedControl
                                AdornerOffsetY="15"
                                HorizontalAdornerPlacement="Outside"
                                IsAdornerVisible="{Binding IsSelected}"
                                VerticalAdornerPlacement="Outside">

                                <Border
                                    Background="Transparent"
                                    BorderBrush="Gray"
                                    BorderThickness="1"
                                    MouseLeftButtonDown="UIElement_OnMouseLeftButtonDown"
                                    MouseMove="UIElement_OnMouseMove">
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="MouseUp">
                                            <b:InvokeCommandAction Command="{Binding Path=DataContext.SelectElement, ElementName=mainGrid}" CommandParameter="{Binding .}" />
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                    <ContentPresenter Content="{Binding TemplatedViewModelToShowOnCanvas}" />
                                </Border>

                                <local:AdornedControl.AdornerContent>
                                    <Rectangle
                                        Width="5"
                                        Height="{Binding Path=PositioningInfoViewModel.SizeHeight}"
                                        HorizontalAlignment="Left"
                                        Fill="Green"
                                        Stroke="Green" />
                                </local:AdornedControl.AdornerContent>

                            </local:AdornedControl>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas
                                Width="1200"
                                Height="800"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Background="AliceBlue"
                                IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </Grid>
        </ScrollViewer>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />

            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <ComboBox
                    Grid.Row="0"
                    ItemsSource="{Binding FilterList}"
                    SelectedItem="{Binding SelectedFilterString}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <lex:LocProxy Name="NameForUiKeyProxy" Source="{Binding .}" />
                                <TextBlock Text="{Binding Result, ElementName=NameForUiKeyProxy}" />
                            </Grid>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <StackPanel
                    Grid.Row="1"
                    Orientation="Horizontal"
                    Visibility="{Binding SelectedFilterString, Converter={StaticResource StringToGroupAddRemoveVisibilityConverter}}">
                    <Button
                        Margin="1"
                        Command="{Binding AddGroupCommand}"
                        Content="{lex:Loc Add}" />
                    <Button
                        Margin="1"
                        Command="{Binding DeleteGroupCommand}"
                        Content="{lex:Loc Delete}" />
                </StackPanel>
                <ListBox
                    Grid.Row="2"
                    ItemsSource="{Binding FilteredPresentationElementViewModels}"
                    SelectedItem="{Binding SelectedElementViewModel}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ., Converter={StaticResource PresentationElementNameConverter}}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
            <GroupBox Grid.Row="1" Header="{lex:Loc SelectedElement}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ContentPresenter Content="{Binding SelectedElementViewModel}">
                        <ContentPresenter.ContentTemplateSelector>
                            <contentTemplateSelectors:SelectedPresentationElementTemplateSelector>
                                <contentTemplateSelectors:SelectedPresentationElementTemplateSelector.TemplateForOthers>
                                    <DataTemplate />
                                </contentTemplateSelectors:SelectedPresentationElementTemplateSelector.TemplateForOthers>
                                <contentTemplateSelectors:SelectedPresentationElementTemplateSelector.TemplateForGroup>
                                    <DataTemplate DataType="presentationSettings:PresentationElementViewModel">
                                        <UniformGrid Margin="5" Columns="2">
                                            <TextBlock Text="{lex:Loc Name}" />
                                            <TextBox Text="{Binding TemplatedViewModelToShowOnCanvas.Header, UpdateSourceTrigger=PropertyChanged}" />
                                            <TextBlock Text="{lex:Loc OffsetLeft}" />
                                            <CheckBox Content="{lex:Loc MoveWithChildren}" IsChecked="{Binding TemplatedViewModelToShowOnCanvas.IsMoveWithChildren}" />
                                        </UniformGrid>
                                    </DataTemplate>
                                </contentTemplateSelectors:SelectedPresentationElementTemplateSelector.TemplateForGroup>
                            </contentTemplateSelectors:SelectedPresentationElementTemplateSelector>
                        </ContentPresenter.ContentTemplateSelector>
                    </ContentPresenter>

                    <UniformGrid
                        Grid.Row="2"
                        Margin="5"
                        Columns="2">

                        <TextBlock Text="{lex:Loc OffsetLeft}" />
                        <mah:NumericUpDown
                            Width="80"
                            Margin="3"
                            InterceptArrowKeys="True"
                            InterceptMouseWheel="True"
                            Interval="5"
                            Value="{Binding SelectedElementViewModel.PositioningInfoViewModel.OffsetLeft}" />
                        <TextBlock Text="{lex:Loc OffsetTop}" />
                        <mah:NumericUpDown
                            Width="80"
                            Margin="3"
                            InterceptArrowKeys="True"
                            InterceptMouseWheel="True"
                            Interval="5"
                            Value="{Binding SelectedElementViewModel.PositioningInfoViewModel.OffsetTop}" />
                        <TextBlock Text="{lex:Loc Width}" />
                        <mah:NumericUpDown
                            Width="80"
                            Margin="3"
                            InterceptArrowKeys="True"
                            InterceptMouseWheel="True"
                            Interval="5"
                            Value="{Binding SelectedElementViewModel.PositioningInfoViewModel.SizeWidth}" />
                        <TextBlock Text="{lex:Loc Height}" />
                        <mah:NumericUpDown
                            Width="80"
                            Margin="3"
                            InterceptArrowKeys="True"
                            InterceptMouseWheel="True"
                            Interval="5"
                            Value="{Binding SelectedElementViewModel.PositioningInfoViewModel.SizeHeight}" />
                    </UniformGrid>
                    <Grid Grid.Row="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Button
                            Margin="1"
                            Command="{Binding CopySelectedPositionInfo}"
                            Content="{lex:Loc Copy}" />
                        <Button
                            Grid.Column="1"
                            Margin="1"
                            Command="{Binding PasteSelectedPositionInfo}"
                            Content="{lex:Loc Paste}" />
                        <Button
                            Grid.Column="2"
                            Margin="1"
                            Command="{Binding PasteOnlySizeSelectedPositionInfo}"
                            Content="{lex:Loc PasteSizeOnly}" />

                    </Grid>
                </Grid>
            </GroupBox>
        </Grid>
    </Grid>

</mah:MetroWindow>
