<UserControl
    x:Class="Unicon2.Fragments.Measuring.Views.MeasuringMonitorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:converter="clr-namespace:Unicon2.SharedResources.Converter;assembly=Unicon2.SharedResources"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dataTemplateSelectors="clr-namespace:Unicon2.SharedResources.DataTemplateSelectors;assembly=Unicon2.SharedResources"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:values="clr-namespace:Unicon2.Presentation.Infrastructure.ViewModels.Values;assembly=Unicon2.Presentation.Infrastructure"
    xmlns:viewModel="clr-namespace:Unicon2.Fragments.Measuring.Infrastructure.ViewModel;assembly=Unicon2.Fragments.Measuring.Infrastructure"
    xmlns:viewModel1="clr-namespace:Unicon2.Fragments.Measuring.ViewModel"
    d:DesignHeight="300"
    d:DesignWidth="300"
    lex:LocalizeDictionary.DesignCulture="ru-RU"
    lex:ResxLocalizationProvider.DefaultAssembly="Unicon2.Localization"
    lex:ResxLocalizationProvider.DefaultDictionary="Resources"
    mc:Ignorable="d">
    <UserControl.Resources>
        <converter:BoolToVisConverter x:Key="BoolToInVisConverter" Invert="True" />
        <converter:BoolToVisConverter x:Key="BoolToVisConverter" Invert="False" />
        <dataTemplateSelectors:ViewModelByStrongNameDataTemplateSelector x:Key="ViewModelByStrongNameDataTemplateSelector" />
    </UserControl.Resources>
    <Grid>
        <DataGrid
            AutoGenerateColumns="False"
            ItemsSource="{Binding MeasuringElementListCollectionView}"
            Visibility="{Binding IsListViewSelected, Converter={StaticResource BoolToVisConverter}}">
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush4}" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </Style.Triggers>
                    <Setter Property="Foreground" Value="Black" />
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn
                    Binding="{Binding Header}"
                    Header="{lex:Loc Name}"
                    IsReadOnly="True" />
                <DataGridTemplateColumn Header="{lex:Loc Value}" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="values:IFormattedValueViewModel">
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{Binding}"
                                ContentTemplateSelector="{StaticResource ViewModelByStrongNameDataTemplateSelector}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn
                    Binding="{Binding GroupName}"
                    Header="{lex:Loc Group}"
                    IsReadOnly="True" />
            </DataGrid.Columns>
            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander IsExpanded="True">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock VerticalAlignment="Bottom" Text="{Binding Name}" />
                                                </StackPanel>
                                            </Expander.Header>
                                            <ItemsPresenter />
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>
        </DataGrid>

        <controls:MetroAnimatedSingleRowTabControl
            Name="groupsTabControl"
            Grid.Column="1"
            DisplayMemberPath="Header"
            ItemsSource="{Binding MeasuringGroupViewModels}"
            SelectedItem="{Binding SelectedMeasuringGroupViewModel}"
            Visibility="{Binding IsListViewSelected, Converter={StaticResource BoolToInVisConverter}}">
            <TabControl.ContentTemplate>
                <DataTemplate DataType="viewModel1:MeasuringGroupViewModel">
                    <ScrollViewer
                        BorderBrush="Black"
                        BorderThickness="1"
                        HorizontalScrollBarVisibility="Auto"
                        VerticalScrollBarVisibility="Auto">
                        <Grid Grid.Column="0">
                            <ItemsControl ItemsSource="{Binding PresentationMeasuringElements}">
                                <ItemsControl.ItemContainerStyle>
                                    <Style TargetType="FrameworkElement">
                                        <Setter Property="Canvas.Left" Value="{Binding Path=PositioningInfo.OffsetLeft}" />
                                        <Setter Property="Canvas.Top" Value="{Binding Path=PositioningInfo.OffsetTop}" />
                                        <Setter Property="Canvas.Width" Value="{Binding Path=PositioningInfo.SizeWidth}" />
                                        <Setter Property="Canvas.Height" Value="{Binding Path=PositioningInfo.SizeHeight}" />
                                    </Style>
                                </ItemsControl.ItemContainerStyle>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <ContentPresenter Content="{Binding TemplatedObjectOnCanvas}" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas
                                            Width="1200"
                                            Height="800"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top"
                                            Background="AliceBlue"
                                            IsItemsHost="True">
                                            <Canvas.RenderTransform>
                                                <ScaleTransform ScaleX="{Binding Path=DataContext.Scale, Source={x:Reference groupsTabControl}}" ScaleY="{Binding Path=DataContext.Scale, Source={x:Reference groupsTabControl}}" />
                                            </Canvas.RenderTransform>
                                        </Canvas>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                    </ScrollViewer>
                </DataTemplate>
            </TabControl.ContentTemplate>
        </controls:MetroAnimatedSingleRowTabControl>

    </Grid>
</UserControl>
