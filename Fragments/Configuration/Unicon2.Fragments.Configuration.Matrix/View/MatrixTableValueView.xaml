<UserControl x:Class="Unicon2.Fragments.Configuration.Matrix.View.MatrixTableValueView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Unicon2.Fragments.Configuration.Matrix.View"
             xmlns:converters="clr-namespace:Unicon2.Fragments.Configuration.Converters;assembly=Unicon2.Fragments.Configuration"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:behaviors="clr-namespace:Unicon2.SharedResources.Behaviors;assembly=Unicon2.SharedResources"
             xmlns:behaviors1="clr-namespace:Unicon2.Fragments.Configuration.Behaviors;assembly=Unicon2.Fragments.Configuration"
             xmlns:dataTemplateSelectors="clr-namespace:Unicon2.SharedResources.DataTemplateSelectors;assembly=Unicon2.SharedResources"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <converters:BoolToBorderColorConverter x:Key="BoolToBorderColorConverter" />
    </UserControl.Resources>
    <Grid Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Path=DataContext.IsTableView, FallbackValue=Collapsed, TargetNullValue=Collapsed,Converter={StaticResource BoolToVisConverter}, Mode=OneWay}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="150"></ColumnDefinition>
            <ColumnDefinition Width="2"></ColumnDefinition>
            <ColumnDefinition Width="*" MinWidth="150"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Border Grid.Column="0" BorderBrush="Black" BorderThickness="1">
            <Grid 
            DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Path=DataContext}"
            Height="Auto"
            HorizontalAlignment="Stretch"  
            VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock HorizontalAlignment="Center" Text="{lex:Loc DeviceData}"></TextBlock>
                <DataGrid
                    Grid.Row="1"
                    Margin="1"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    AutoGenerateColumns="False"
                    CanUserAddRows="False">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TargetUpdated">
                            <i:InvokeCommandAction Command="{Binding DeviceValue.MatrixUpdatedCommand}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="SourceUpdated">
                            <i:InvokeCommandAction Command="{Binding DeviceValue.MatrixUpdatedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <i:Interaction.Behaviors>
                        <behaviors:BubbleScrollBehavior/>
                        <behaviors:DynamicColumnsDataGridBehavior IsTransponed="{Binding ElementName=IsTransponedCheckBox, Path=IsChecked}" RowValues="{Binding DeviceValue.Table}" />
                    </i:Interaction.Behaviors>
                </DataGrid>

                <CheckBox
                Name="IsTransponedCheckBox"
                Grid.Row="2"
                Margin="5"
                HorizontalAlignment="Left"
                IsChecked="True"
                Content="{lex:Loc Transpone}" />
            </Grid>
        </Border>

        <GridSplitter  Grid.Column="1" Width="2" HorizontalAlignment="Center" VerticalAlignment="Stretch"></GridSplitter>

        <Border Grid.Column="2" BorderBrush="Black" BorderThickness="1">
            <Grid 
                DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Path=DataContext}"
                Height="Auto"
                HorizontalAlignment="Stretch"  
                VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock HorizontalAlignment="Center" Text="{lex:Loc LocalData}"></TextBlock>
                <Border BorderThickness="1" Grid.Row="1" BorderBrush="{Binding LocalValue.IsFormattedValueChanged, Converter={StaticResource BoolToBorderColorConverter}, FallbackValue=Transparent}">
                    <DataGrid
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    AutoGenerateColumns="False"
                    CanUserAddRows="False">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TargetUpdated">
                                <i:InvokeCommandAction Command="{Binding LocalValue.MatrixUpdatedCommand}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="SourceUpdated">
                                <i:InvokeCommandAction Command="{Binding LocalValue.MatrixUpdatedCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <i:Interaction.Behaviors>
                            <behaviors:BubbleScrollBehavior/>
                            <behaviors:DynamicColumnsDataGridBehavior IsTransponed="{Binding ElementName=IsTransponedCheckBoxLocalValue, Path=IsChecked}" RowValues="{Binding LocalValue.Table}" />
                        </i:Interaction.Behaviors>
                    </DataGrid>
                </Border>
                <CheckBox
                Name="IsTransponedCheckBoxLocalValue"
                Grid.Row="2"
                Margin="5"
                HorizontalAlignment="Left"
                IsChecked="True"
                Content="{lex:Loc Transpone}" />
            </Grid>
        </Border>
    </Grid>
</UserControl>