<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:Unicon2.Fragments.Configuration.Behaviors"
    xmlns:behaviors1="clr-namespace:Unicon2.SharedResources.Behaviors;assembly=Unicon2.SharedResources"
    xmlns:converter="clr-namespace:Unicon2.SharedResources.Converter;assembly=Unicon2.SharedResources"
    xmlns:converters="clr-namespace:Unicon2.Fragments.Configuration.Converters"
    xmlns:dataTemplateSelectors="clr-namespace:Unicon2.SharedResources.DataTemplateSelectors;assembly=Unicon2.SharedResources"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:struct="clr-namespace:Unicon2.Fragments.Configuration.Infrastructure.ViewModel;assembly=Unicon2.Fragments.Configuration.Infrastructure">

    <converter:LevelToMarginConverter x:Key="LevelToMarginConverter" />
    <converters:IsItemsGroupToVisibilityConverter x:Key="IsItemsGroupToVisibilityConverter" />
    <converter:BoolToVisConverter x:Key="BoolToVisConverter" Invert="False" />
    <converters:BoolToBorderColorConverter x:Key="BoolToBorderColorConverter" />
    <converter:IsInterfaceImplementedToBoolConverter x:Key="IsInterfaceImplementedToBoolConverter" />
    <converter:ObjectEqualityDescriptionNullToVisibilityConverter x:Key="ObjectEqualityDescriptionNullToVisibilityConverter" />

    <DataTemplate x:Key="RuntimeConfigurationViewModelDataTemplate" DataType="{x:Type struct:IRuntimeConfigurationViewModel}">
        <Grid Name="ConfigGrid">
            <Grid
                Name="dummygrid"
                HorizontalAlignment="Stretch"
                Visibility="Hidden">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.4*" />
                    <ColumnDefinition Width="0.5*" />
                    <ColumnDefinition Width="0.5*" />
                    <ColumnDefinition Width="0.2*" />
                    <ColumnDefinition Width="0.5*" />

                </Grid.ColumnDefinitions>
                <Border Name="dummywidth1" Grid.Column="0" />
                <Border Name="dummywidth2" Grid.Column="1" />
                <Border Name="dummywidth3" Grid.Column="2" />
                <Border Name="dummywidth4" Grid.Column="3" />
                <Border Name="dummywidth5" Grid.Column="4" />
            </Grid>
            <ListView
                Name="ConfigListView"
                Width="auto" AlternationCount="0"
                HorizontalAlignment="Stretch"
                ItemsSource="{Binding Path=AllRows}">
                <ListView.ItemContainerStyle>
                    
                    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListViewItem">
                                    <Border x:Name="Border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{DynamicResource MaterialDesignDivider}"
                                            BorderThickness="0,0,0,1"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <StackPanel Orientation="Vertical">
                                            <GridViewRowPresenter Content="{TemplateBinding Content}"></GridViewRowPresenter>
                                            <TextBlock Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}, Path=DataContext.IsTableView, FallbackValue=Collapsed, TargetNullValue=Collapsed,Converter={StaticResource BoolToVisConverter}, Mode=OneWay}" Text="Jopa"></TextBlock>
                                        </StackPanel>
                                    </Border>



                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush2}" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush2}" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="True" />
                                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="True" />
                                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Opacity" Value=".56" />
                                        </Trigger>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush4}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>



                                </ControlTemplate>

                            </Setter.Value>

                        </Setter>
                        
                    </Style>
                </ListView.ItemContainerStyle>
                <i:Interaction.Behaviors>
                    <behaviors1:TreeGridBehavior />
                </i:Interaction.Behaviors>
                <ListView.View>
                    <GridView>
                        <GridView.Columns>
                            <GridViewColumn  Width="{Binding Source={x:Reference dummywidth1}, Path=ActualWidth}" Header="{lex:Loc Name}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <ToggleButton
                                                Name="LevelTreeToggleButton"
                                                Grid.Column="0"
                                                Width="20"
                                                Height="20"
                                                Margin="{Binding Level, Converter={StaticResource LevelToMarginConverter}}"
                                                Style="{DynamicResource ConfigurationToggleButtonStyle}"
                                                Tag="{Binding ElementName=ConfigListView, Path=ItemsSource}">
                                                <ToggleButton.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="{lex:Loc Key=TryTransform}" Command="{Binding TryTransformToTableCommand}">
                                                        </MenuItem>
                                                    </ContextMenu>
                                                </ToggleButton.ContextMenu>
                                                <i:Interaction.Behaviors>
                                                    <behaviors:TreeViewToggleButtonBehavior />
                                                </i:Interaction.Behaviors>
                                            </ToggleButton>
                                            
                                            <Popup Name="tablePopup" Grid.Column="2" IsOpen="{Binding IsTablePopupOpen,FallbackValue=false}">
                                               
                                            </Popup>
                                            <TextBlock
                                                Name="HeaderTextBlock"
                                                Grid.Column="2"
                                                Text="{Binding Path=Header}" />
                                            <Button
                                                Grid.Column="3"
                                                Width="20"
                                                Style="{DynamicResource UniconButtonStyle}"
                                                ToolTip="{Binding Path=Description}"
                                                ToolTipService.InitialShowDelay="100"
                                                ToolTipService.ShowDuration="60000">
                                                <Button.Visibility>
                                                    <MultiBinding Converter="{StaticResource ObjectEqualityDescriptionNullToVisibilityConverter}">
                                                        <Binding ElementName="ConfigListView" Path="SelectedItem" />
                                                        <Binding Path="." />
                                                        <Binding Path="Description" />
                                                    </MultiBinding>
                                                </Button.Visibility>
                                                <Rectangle Width="8" Height="12">
                                                    <Rectangle.Fill>
                                                        <VisualBrush Visual="{DynamicResource appbar_information}" />
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                            </Button>
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn  Width="{Binding Source={x:Reference dummywidth2}, Path=ActualWidth}" Header="{lex:Loc DeviceData}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ContentControl Content="{Binding DeviceValue}">
                                            <ContentControl.ContentTemplateSelector>
                                                <dataTemplateSelectors:ViewModelByStrongNameDataTemplateSelector />
                                            </ContentControl.ContentTemplateSelector>
                                        </ContentControl>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Width="{Binding Source={x:Reference dummywidth3}, Path=ActualWidth}" Header="{lex:Loc LocalData}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Border
                                            HorizontalAlignment="Stretch"
                                            BorderBrush="{Binding LocalValue.IsFormattedValueChanged, Converter={StaticResource BoolToBorderColorConverter}, FallbackValue=Transparent}"
                                            BorderThickness="1.5">
                                            <Grid Visibility="{Binding ., Converter={StaticResource IsItemsGroupToVisibilityConverter}}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <ContentControl Grid.Column="0" Content="{Binding LocalValue}">
                                                    <ContentControl.ContentTemplateSelector>
                                                        <dataTemplateSelectors:ViewModelByStrongNameDataTemplateSelector />
                                                    </ContentControl.ContentTemplateSelector>
                                                </ContentControl>
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn  Width="Auto" Header="{lex:Loc MeasureUnit}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ContentControl Content="{Binding MeasureUnit}" Visibility="{Binding IsMeasureUnitEnabled, Converter={StaticResource BoolToVisConverter}}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn  Width="Auto" Header="{lex:Loc Range}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid Visibility="{Binding ., Converter={StaticResource IsItemsGroupToVisibilityConverter}}">
                                            <StackPanel Orientation="Horizontal" Visibility="{Binding IsRangeEnabled, Converter={StaticResource BoolToVisConverter}}">
                                                <TextBlock Text="[" />
                                                <TextBlock Text="{Binding RangeViewModel.RangeFrom}" />
                                                <TextBlock Text=";" />
                                                <TextBlock Text="{Binding RangeViewModel.RangeTo}" />
                                                <TextBlock Text="]" />
                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView.Columns>
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MatrixValueViewModelDataTemplate">
        <Grid>
            <Button
                Width="40"
                Margin="3"
                Command="{Binding StartShowDetails}"
                Style="{DynamicResource UniconButtonStyle}">
                <Rectangle
                    Width="25"
                    Height="25"
                    Fill="Black">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_draw_pixel_fill_grid}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="EditableMatrixValueViewModelDataTemplate">
        <Grid>

            <Button
                Width="40"
                Margin="3"
                Command="{Binding StartShowDetails}"
                Style="{DynamicResource UniconButtonStyle}">
                <Rectangle
                    Width="25"
                    Height="25"
                    Fill="Black">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_draw_pixel_fill_grid}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
        </Grid>
    </DataTemplate>


    <DataTemplate x:Key="RuntimeConfigTableValueViewModelDataTemplate">
        <Expander IsExpanded="True">
            <Border Background="Bisque" BorderThickness="1" Width="Auto" Height="Auto">
                <DataGrid
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    AutoGenerateColumns="False"
                    CanUserAddRows="False">
                    <i:Interaction.Behaviors>
                        <behaviors1:DynamicColumnsDataGridBehavior RowValues="{Binding ConfigTable}" />
                    </i:Interaction.Behaviors>
                </DataGrid>
            </Border>
        </Expander>
    </DataTemplate>

</ResourceDictionary>