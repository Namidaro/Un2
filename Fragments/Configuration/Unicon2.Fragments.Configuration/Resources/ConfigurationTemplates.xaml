<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:Unicon2.Fragments.Configuration.Behaviors"
    xmlns:behaviors1="clr-namespace:Unicon2.SharedResources.Behaviors;assembly=Unicon2.SharedResources"
    xmlns:converter="clr-namespace:Unicon2.SharedResources.Converter;assembly=Unicon2.SharedResources"
    xmlns:converters="clr-namespace:Unicon2.Fragments.Configuration.Converters"
    xmlns:dataTemplateSelectors="clr-namespace:Unicon2.SharedResources.DataTemplateSelectors;assembly=Unicon2.SharedResources"
    xmlns:dataTemplateSelectors1="clr-namespace:Unicon2.Fragments.Configuration.DataTemplateSelectors"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:struct="clr-namespace:Unicon2.Fragments.Configuration.Infrastructure.ViewModel;assembly=Unicon2.Fragments.Configuration.Infrastructure"
    xmlns:viewModel="clr-namespace:Unicon2.Fragments.Configuration.ViewModel"
    xmlns:views="clr-namespace:Unicon2.Fragments.Configuration.Views">

    <converter:LevelToMarginConverter x:Key="LevelToMarginConverter" />
    <converters:IsItemsGroupToVisibilityConverter x:Key="IsItemsGroupToVisibilityConverter" />
    <converter:BoolToVisConverter x:Key="BoolToVisConverter" Invert="False" />
    <converters:BoolToBorderColorConverter x:Key="BoolToBorderColorConverter" />
    <converter:BoolToVisConverter x:Key="BoolToInVisConverter" Invert="True" />

    <converter:IsInterfaceImplementedToBoolConverter x:Key="IsInterfaceImplementedToBoolConverter" />
    <converter:ObjectEqualityDescriptionNullToVisibilityConverter x:Key="ObjectEqualityDescriptionNullToVisibilityConverter" />
    <converter:IsInterfaceImplementedToVisibilityConverter x:Key="IsInterfaceImplementedToVisibilityConverter" />
    <converter:IsInterfaceImplementedToVisibilityConverter x:Key="IsInterfaceImplementedToInvertVisibilityConverter" IsInverted="True" />

    <DataTemplate x:Key="RuntimeConfigurationViewModelDataTemplate" DataType="{x:Type struct:IRuntimeConfigurationViewModel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <TreeView
                    x:Name="mainItemsTreeView"
                    MinWidth="150"
                    ItemsSource="{Binding MainRows}"
                    SelectedValuePath="">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction Command="{Binding MainItemSelectedCommand}" CommandParameter="{Binding ElementName=mainItemsTreeView, Path=SelectedItem}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Path=ChildConfigItemViewModels}">
                            <Grid>
                                <TextBlock
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Text="{Binding RelatedConfigurationItemViewModel.Header}" />
                                <Grid HorizontalAlignment="Right">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Button
                                        Width="30"
                                        Command="{Binding Path=DataContext.ShowTableCommand, ElementName=mainItemsTreeView}"
                                        CommandParameter="{Binding .}"
                                        Style="{DynamicResource UniconButtonStyle}"
                                        Visibility="{Binding IsTableEnabled, Converter={StaticResource BoolToVisConverter}}">
                                        <Rectangle
                                            Width="15"
                                            Height="15"
                                            Fill="Black">
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_draw_pixel_fill_grid}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Button>
                                    <Rectangle
                                        Grid.Column="1"
                                        Width="15"
                                        Height="15"
                                        Margin="2"
                                        HorizontalAlignment="Right"
                                        Fill="Black"
                                        Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisConverter}}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_chevron_right}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Grid>
                            </Grid>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </Grid>
            <GridSplitter
                Grid.Column="1"
                Width="3"
                HorizontalAlignment="Center"
                VerticalAlignment="Stretch"
                ShowsPreview="False" />
            <ContentControl Grid.Column="2" Content="{Binding SelectedConfigDetails}">
                <ContentControl.ContentTemplateSelector>
                    <dataTemplateSelectors1:SelectedConfigDetailsSelector>
                        <dataTemplateSelectors1:SelectedConfigDetailsSelector.TableTemplate>
                            <DataTemplate DataType="viewModel:MainConfigItemViewModel">
                                <Grid Name="tableGrid">
                                    <ContentPresenter Content="{Binding RelatedConfigurationItemViewModel}">
                                        <ContentPresenter.ContentTemplateSelector>
                                            <dataTemplateSelectors:TableViewByNameDataTemplateSelector />
                                        </ContentPresenter.ContentTemplateSelector>
                                    </ContentPresenter>
                                </Grid>
                            </DataTemplate>
                        </dataTemplateSelectors1:SelectedConfigDetailsSelector.TableTemplate>
                        <dataTemplateSelectors1:SelectedConfigDetailsSelector.ConfigTreeTemplate>
                            <DataTemplate DataType="viewModel:MainConfigItemViewModel">
                                <views:ConfigView />
                            </DataTemplate>
                        </dataTemplateSelectors1:SelectedConfigDetailsSelector.ConfigTreeTemplate>
                    </dataTemplateSelectors1:SelectedConfigDetailsSelector>
                </ContentControl.ContentTemplateSelector>
            </ContentControl>

        </Grid>

    </DataTemplate>

    <DataTemplate x:Key="MatrixValueViewModelDataTemplate">
        <Grid>
            <Button
                Width="40"
                Margin="3"
                Command="{Binding StartShowDetails}"
                Style="{DynamicResource UniconButtonStyle}">
                <Rectangle
                    Width="25"
                    Height="25"
                    Fill="Black">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_draw_pixel_fill_grid}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="EditableMatrixValueViewModelDataTemplate">
        <Grid>

            <Button
                Width="40"
                Margin="3"
                Command="{Binding StartShowDetails}"
                Style="{DynamicResource UniconButtonStyle}">
                <Rectangle
                    Width="25"
                    Height="25"
                    Fill="Black">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_draw_pixel_fill_grid}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
        </Grid>
    </DataTemplate>


    <DataTemplate x:Key="RuntimeConfigTableValueViewModelDataTemplate">
        <Expander IsExpanded="True">
            <Border
                Width="Auto"
                Height="Auto"
                Background="Bisque"
                BorderThickness="1">
                <DataGrid
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    AutoGenerateColumns="False"
                    CanUserAddRows="False">
                    <i:Interaction.Behaviors>
                        <behaviors1:DynamicColumnsDataGridBehavior RowValues="{Binding ConfigTable}" />
                    </i:Interaction.Behaviors>
                </DataGrid>
            </Border>
        </Expander>
    </DataTemplate>

    <DataTemplate x:Key="ConfigAsTableViewDataTemplate">
        <views:ConfigAsTableView />
    </DataTemplate>


</ResourceDictionary>