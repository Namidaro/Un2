using System;
using System.Collections.Generic;

namespace Unicon2.Fragments.FileOperations.FileOperations
{
    public class FileOperationException : Exception
    {
        private static Dictionary<int, string> _messagesDictionary = new Dictionary<int, string>
        {
            {1,"Обращение к зарезервированной памяти"},
            {2,"Подана неверная команда"},
            {5,"Слишком много открытых файлов"},
            {6,"Файл еще не открыт"},
            {7,"Неверный пароль"},
            {8,"Ошибка дескриптора файла"},
            {9,"Ошибка CRC"},
            {101,"Произошла невосстановимая ошибка на низком уровне"},
            {102,"Ошибка структуры FAT на томе или рабочая область испорчена"},
            {103,"Диск не готов"},
            {104,"Файл не найден"},
            {105,"Не найден путь"},
            {106,"Указанная строка содержит недопустимое имя"},
            {107,"Отканано в доступе"},
            {108,"Файл или папка с таким именем уже существуют"},
            {109,"Предоставленная структура объекта\nфайла/директории ошибочна"},
            {110,"Дествие произведено на защищенном\nот записи носителе данных"},
            {111,"Указан недопустимый номер диска"},
            {112,"Рабочая область логического диска\nне зарегистрирована"},
            {113,"На диске нет рабочего тома с файловой системой FAT"},
            {114,"Функция остановлена перед началом форматирования"},
            {115,"Функция остановлена из-за таймаута\nв безопасном управлении потоками"},
            {116,"Доступ к файлу отклонен управлением\nсовместного доступа к файлу.\nПерезагрузите, пожалуйста, устройство"},
            {117,"Недостаточно памяти для выполнения операции"},
            {118,"Количество открытых файлов достигло\nмаксимального количества"},
            {119,"Указанный параметр недопустим"},
            {224,"Операция не была выполнена"},
            {255,"Нет связи с устройством, невозможно выполнить операцию"}
        };

        private static string GetMessage(int exceptionNumber)
        {
            if (_messagesDictionary.ContainsKey(exceptionNumber))
            {
                return _messagesDictionary[exceptionNumber];
            }
            else
            {
                return _messagesDictionary[255];
            }
        }

        public FileOperationException(int exceptionNumber) : base(GetMessage(exceptionNumber))
        {
            
        }
    }
}